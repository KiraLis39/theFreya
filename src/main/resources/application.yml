logging:
  level:
    root: INFO
    sun.awt: INFO
    javax.swing: INFO
    java.awt: WARN
    java.lang.Runtime: INFO
    org.jboss.logging: INFO
    org.springframework.orm.jpa: WARN
    org.springframework.data.repository.config: WARN
    org.hibernate: INFO
    org.hibernate.dialect.Dialect: WARN
    org.hibernate.jpa.internal.util.LogHelper: WARN
    org.hibernate.orm.connections: WARN
    com.zaxxer.hikari: WARN
    org.hibernate.engine.transaction.jta: WARN


server:
  port: 8080
  shutdown: graceful
  compression:
    enabled: true

  servlet:
    context-path: ${SERVLET_CONTEXT_PATH:/freya}
    encoding:
      charset: UTF-8
      enabled: true

  error:
    whitelabel:
      enabled: true
    path: /error
    include-message: always
    include-exception: true
    include-binding-errors: on_param
    include-stacktrace: on_param

spring:
  application:
    name: Freya the Game
    version: 0.1.5
    author: KiraLis39
    company: Multiverse-39 Group, 2023
    logstash:
      enabled: false

  main:
    register-shutdown-hook: true
    allow-circular-references: false
    lazy-initialization: false
    allow-bean-definition-overriding: false
    log-startup-info: true
    banner-mode: console

  profiles:
    group:
      dev: dev
      prod: prod
    default: dev
    active: dev

  jackson:
    time-zone: UTC
  #  default-property-inclusion: non_null
#    serialization:
#      write-dates-as-timestamps: true
#      write-date-keys-as-timestamps: true

  data:
    web:
      pageable:
        max-page-size: 100
    jpa:
      repositories:
        bootstrap-mode: deferred

  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: org.sqlite.JDBC
    hikari:
      poolName: Hikari
      driver-class-name: org.sqlite.JDBC
      # Максимальное количество миллисекунд, в течение которых клиент (то есть вы) будет ожидать соединения из пула.
      #   Если это время превышено, а соединение не становится доступным, будет выдано исключение SQLException.
      #   Минимально допустимое время ожидания соединения составляет 250 мс. По умолчанию: 30000 (30 секунд)
      connection-timeout: 60_000
      # Максимальное время, в течение которого соединению разрешено простаивать в пуле.
      #   Применяется если minimumIdle меньше maximumPoolSize. Неактивные соединения не будут удалены после того,
      #   как пул достигнет minimumIdle соединений. Независимо от того, будет ли соединение отключено как бездействующее
      #   или нет, максимальное отклонение составит +30 секунд, а среднее отклонение составит +15 секунд.
      #   Соединение никогда не будет отключено как бездействующее до истечения этого таймаута.
      #   Значение 0 означает, что простаивающие соединения никогда не удаляются из пула.
      #   Минимально допустимое значение — 10000 мс (10 секунд). По умолчанию: 600000 (10 минут).
      idle-timeout: 30_000
      # Максимальный размер пула, включая как простаивающие, так и используемые соединения.
      #   По сути, это значение будет определять максимальное количество фактических подключений к базе данных.
      #   Разумное значение этого параметра лучше всего определяется вашей средой выполнения.
      #   Когда пул достигнет этого размера и не будет свободных соединений, вызовы getConnection()
      #   будут блокироваться на срок до connection-timeout, прежде чем истечет время ожидания.
      maximum-pool-size: 8
      # Максимальное время жизни соединения в пуле. Используемое соединение будет удалено только когда будет закрыто.
      #   Для каждого соединения применяется незначительное отрицательное затухание, чтобы избежать массового затухания в пуле.
      #   Должно быть на несколько секунд короче, чем ограничение времени подключения, установленное любой БД.
      max-lifetime: 30_000
      # Как часто HikariCP будет пытаться поддерживать соединение, чтобы предотвратить
      #   его тайм-аут из-за базы данных или сетевой инфраструктуры. Это значение должно быть меньше max-lifetime:
      keepalive-time: 10_000

  # liquibase:
  #   change-log: classpath:db/changelog/changelog.xml
  #   # drop-first: true

  jpa:
    database-platform: org.hibernate.community.dialect.SQLiteDialect
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        check_nullability: true
        jdbc:
          # Hibernate прозрачно отключает пакетную вставку на уровне JDBC, если вы используете генератор IDENTITY
          batch_size: 10
          batch_versioned_data: true
        order_updates: true
        connection:
          autocommit: false
          pool_size: 6
        dialect: org.hibernate.community.dialect.SQLiteDialect

  task:
    execution:
      pool:
        core-size: 4
        max-size: 10
        queue-capacity: 30

springdoc:
  enable-spring-security: false
  show-actuator: true
  swagger-ui:
    enabled: true
    deep-linking: true
    default-model-expand-depth: 0
    default-models-expand-depth: 0
    show-extensions: true
    show-common-extensions: true
    tags-sorter: alpha
    operations-sorter: alpha
    doc-expansion: none
#    config-url: "${server.servlet.context-path}/v3/api-docs/swagger-config"
#    url: "${server.servlet.context-path}/v3/api-docs"
    display-request-duration: true
  api-docs:
    enabled: true
    groups:
      enabled: true
#    path: /v3/api-docs
#  packages-to-scan: freya, api

#management:
#  endpoint:
#    health:
#      probes:
#        enabled: true
