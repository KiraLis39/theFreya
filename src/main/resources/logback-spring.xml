<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE configuration>

<configuration scan="true" scanPeriod="30 seconds" debug="false">
    <contextName>FreyaLogbackSystem</contextName>
<!--    <include resource="/org/springframework/boot/logging/logback/base.xml"/>-->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <statusListener class="ch.qos.logback.core.status.NopStatusListener"/>

    <springProperty scope="context" name="app_name" source="spring.application.name"/>
    <springProperty scope="context" name="app_version" source="spring.application.version"/>
    <springProperty scope="context" name="exchange" source="spring.rabbitmq.template.exchange"/>
    <springProperty scope="context" name="exchangeType" source="spring.rabbitmq.template.exchangeType"/>
    <springProperty scope="context" name="routingKey" source="spring.rabbitmq.template.routing-key"/>
<!--    <springProperty scope="context" name="LOGSTASH_URL" source="spring.application.logstash.host"/>-->
<!--    <springProperty scope="context" name="LOGSTASH_PORT" source="spring.application.logstash.port"/>-->
    <springProperty scope="context" name="isLogstashEnabled" source="spring.application.logstash.enabled"/>

    <property name="log.path" value="log"/>
    <property name="log.maxHistory" value="3"/>
    <property name="log.maxFileSize" value="3MB"/>
    <property name="log.totalSizeCap" value="1GB"/>

    <property name="log.example"
              value="[App: ${app_name}, v.${app_version}] %magenta(%d{dd MMMM HH:mm:ss}) %highlight(%level) %yellow(%thread) %green(%logger{24}.%M%red(:%L)) %1() %msg %n"/>

    <property name="log.consoleColorPattern"
              value="%magenta(%d{dd.MM.yy HH:mm:ss.SSS}) %highlight([%level]) %boldCyan(th:%thread) %green(%logger{24})\_%red(.%M\(\))\_%(:%L) %1() %yellow(%msg)\n"/>

    <property name="log.filePattern"
              value="%d{dd MMMM HH:mm:ss.SSS} [%level] th:%thread %logger{16}.%M\\(\\)\\_%red(:%L) %1() %msg%n"/>

    <!-- APPENDERS -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <charset>utf-8</charset>
            <pattern>${log.consoleColorPattern}</pattern>
        </encoder>
    </appender>

    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/trace.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${log.maxHistory}</maxHistory>
            <maxFileSize>${log.maxFileSize}</maxFileSize>
            <totalSizeCap>${log.totalSizeCap}</totalSizeCap>
        </rollingPolicy>
        <append>true</append>
        <layout>
            <pattern>${log.filePattern}</pattern>
        </layout>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>DENY</onMatch>
        </filter>
    </appender>

    <appender name="ERRORS" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${log.path}/error.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <maxHistory>${log.maxHistory}</maxHistory>
            <maxFileSize>${log.maxFileSize}</maxFileSize>
            <totalSizeCap>${log.totalSizeCap}</totalSizeCap>
        </rollingPolicy>
        <append>true</append>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
        <layout>
            <pattern>${log.filePattern}</pattern>
        </layout>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <if condition='${isLogstashEnabled} == true'>
        <then>
            <!-- Аппендер для вывода логов в Кибану: -->
            <appender name="logstash" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
                <destination>${LOGSTASH_URL}:${LOGSTASH_PORT}</destination>
                <reconnectionDelay>10 second</reconnectionDelay>
                <encoder charset="UTF-8" class="net.logstash.logback.encoder.LogstashEncoder">
                    <customFields>{"logger_name": "ServicedeskApiLogbackSystem"}</customFields>
                </encoder>
            </appender>

            <root>
                <appender-ref ref="logstash" level="INFO"/>
            </root>
        </then>
    </if>

    <appender name="ASYNC_TO_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>64</queueSize>
        <maxFlushTime>10000</maxFlushTime>
        <appender-ref ref="FILE"/>
    </appender>

    <shutdownHook class="ch.qos.logback.core.hook.DelayingShutdownHook"/>

    <root>
        <appender-ref ref="STDOUT" level="DEBUG"/>
        <appender-ref ref="ERRORS" level="ERROR"/>
        <appender-ref ref="ASYNC_TO_FILE" level="INFO"/>
    </root>
</configuration>
